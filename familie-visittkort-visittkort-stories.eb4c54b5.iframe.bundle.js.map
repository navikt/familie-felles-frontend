{"version":3,"file":"familie-visittkort-visittkort-stories.eb4c54b5.iframe.bundle.js","mappings":";AA8BA;;AAIA;AAGA;;AAIA;AC7BA;;AAEA;;;AAGA;AACA;;AAIA","sources":["webpack://familie-felles-frontend/./packages/familie-visittkort/src/index.tsx","webpack://familie-felles-frontend/./packages/familie-visittkort/visittkort.stories.tsx"],"sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { CopyButton, HStack, Label } from '@navikt/ds-react';\nimport { ABorderStrong, ABorderSubtle, ASpacing4 } from '@navikt/ds-tokens/dist/tokens';\nimport { FamilieIkonVelger } from '@navikt/familie-ikoner';\nimport { kjønnType } from '@navikt/familie-typer';\nexport interface IProps extends React.PropsWithChildren {\n    alder: number;\n    ident: string;\n    kjønn: Kjønn | kjønnType;\n    navn: string | React.ReactNode;\n    ikon?: React.ReactElement;\n    dempetKantlinje?: boolean;\n    padding?: boolean;\n    borderBottom?: boolean;\n}\n\n/* Vi ønsker å fase ut familie-typer som dependency men vi ønsker også å være bakoverkompatible.\n * Må derfor definere Kjønn som egen enum her.\n * */\n\nenum Kjønn {\n    KVINNE = 'KVINNE',\n    MANN = 'MANN',\n    UKJENT = 'UKJENT',\n}\n\nconst kjønnTilKjønnType = (kjønn: Kjønn | kjønnType) => kjønn as kjønnType;\n\nconst StyledVisittkort = styled(HStack)<{ $dempetKantlinje: boolean; $padding: boolean }>`\n    ${props =>\n        props.$borderBottom &&\n        `border-bottom: 1px solid ${props.$dempetKantlinje ? ABorderSubtle : ABorderStrong}`};\n    height: 3rem;\n    padding: ${props => props.$padding && `0 ${ASpacing4}`};\n`;\n\nconst GrådigChildrenContainer = styled(HStack)`\n    flex: 1;\n`;\n\nexport const Visittkort: React.FunctionComponent<IProps> = ({\n    alder,\n    children,\n    ident,\n    kjønn,\n    navn,\n    ikon,\n    dempetKantlinje = false,\n    padding = false,\n    borderBottom = true,\n}) => {\n    const typeKjønn = kjønnTilKjønnType(kjønn);\n\n    return (\n        <StyledVisittkort\n            align=\"center\"\n            justify=\"space-between\"\n            gap=\"4\"\n            $dempetKantlinje={dempetKantlinje}\n            $padding={padding}\n            $borderBottom={borderBottom}\n        >\n            <HStack align=\"center\" gap=\"4\">\n                {ikon ? (\n                    ikon\n                ) : (\n                    <FamilieIkonVelger alder={alder} kjønn={typeKjønn} width={24} height={24} />\n                )}\n                {typeof navn === 'string' ? (\n                    <Label size={'small'}>\n                        {navn} ({alder} år)\n                    </Label>\n                ) : (\n                    navn\n                )}\n                <div>|</div>\n                <HStack align=\"center\" gap=\"1\">\n                    {ident}\n                    <CopyButton copyText={ident.replace(' ', '')} size={'small'} />\n                </HStack>\n            </HStack>\n            <GrådigChildrenContainer align=\"center\" gap=\"4\">\n                {children}\n            </GrådigChildrenContainer>\n        </StyledVisittkort>\n    );\n};\n\nexport default Visittkort;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Buildings3Icon } from '@navikt/aksel-icons';\nimport { BodyShort, Button, Dropdown, Spacer, Tag } from '@navikt/ds-react';\nimport { AGreen600, ASpacing6 } from '@navikt/ds-tokens/dist/tokens';\nimport { kjønnType } from '@navikt/familie-typer';\n\nimport Visittkort from './src';\nimport '@navikt/ds-css';\n\nconst IkonSirkel = styled.span`\n    border-color: ${AGreen600};\n    border-radius: 50%;\n    background-color: ${AGreen600};\n    display: inline-grid;\n    place-items: center;\n    height: ${ASpacing6};\n    width: ${ASpacing6};\n    color: white;\n`;\n\nexport default {\n    component: Visittkort,\n    parameters: {\n        docs: {\n            subtitle:\n                'Visittkort brukes til å vise enkel informasjon om en bruker. Eksempel nr 2 under er laget for full skjermbredde.',\n        },\n    },\n    title: 'Komponenter/Visittkort',\n};\n\nexport const VisittkortStory = ({ ...args }) => {\n    return (\n        <>\n            <Visittkort\n                alder={30}\n                kjønn={kjønnType.KVINNE}\n                navn=\"FREDFULL KETSJUP\"\n                ident={'123456 78910'}\n                {...args}\n            />\n            <Visittkort\n                alder={12}\n                kjønn={kjønnType.MANN}\n                navn=\"ROLIG BAJAS\"\n                ident={'123456 78910'}\n                ikon={\n                    <IkonSirkel>\n                        <Buildings3Icon width={20} height={20} />\n                    </IkonSirkel>\n                }\n            />\n            <Visittkort\n                alder={35}\n                kjønn={kjønnType.UKJENT}\n                navn=\"HEMMELIGHETSFULL BIBLIOTEKAR\"\n                ident=\"123456 78910\"\n                dempetKantlinje\n                padding\n            >\n                <div>|</div>\n                <BodyShort>{`Kommunenr: 0181`}</BodyShort>\n                <Tag variant=\"neutral-filled\" size=\"small\">\n                    Død 01.01.2024\n                </Tag>\n                <Spacer />\n                <Tag variant=\"info\" size=\"small\">{`Migrert 01.01.2024`}</Tag>\n                <BodyShort>Saksoversikt</BodyShort>\n                <BodyShort>Dokumenter</BodyShort>\n                <Dropdown>\n                    <Button\n                        variant=\"secondary\"\n                        size=\"small\"\n                        iconPosition={'right'}\n                        as={Dropdown.Toggle}\n                    >\n                        Behandlingsmeny\n                    </Button>\n                </Dropdown>\n            </Visittkort>\n        </>\n    );\n};\n\nVisittkortStory.args = {\n    alder: 30,\n    kjønn: kjønnType.KVINNE,\n    navn: 'FREDFULL KETSJUP',\n    ident: '123456 78910',\n};\n\nVisittkortStory.argTypes = {\n    alder: {\n        control: {\n            type: 'number',\n        },\n    },\n    dempetKantlinje: {\n        control: {\n            type: 'boolean',\n        },\n    },\n    padding: {\n        control: {\n            type: 'boolean',\n        },\n    },\n};\n"],"names":[],"sourceRoot":""}