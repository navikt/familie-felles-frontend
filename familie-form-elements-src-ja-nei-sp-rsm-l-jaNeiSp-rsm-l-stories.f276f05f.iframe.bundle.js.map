{"version":3,"file":"familie-form-elements-src-ja-nei-sp-rsm-l-jaNeiSp-rsm-l-stories.f276f05f.iframe.bundle.js","mappings":";;;;AAuBA;;;;AAOA;ACZA;;AAOA","sources":["webpack://familie-felles-frontend/./packages/familie-form-elements/src/ja-nei-spørsmål/JaNeiSpørsmål.tsx","webpack://familie-felles-frontend/./packages/familie-form-elements/src/ja-nei-spørsmål/jaNeiSpørsmål.stories.tsx"],"sourcesContent":["import React, { ReactNode, useState, Ref } from 'react';\nimport { Radio, RadioGroup, RadioGroupProps } from '@navikt/ds-react';\nimport styled from 'styled-components';\nimport { ESvar } from './typer';\n\ntype LabelTekstForJaNei = {\n    ja: ReactNode;\n    nei: ReactNode;\n    vetikke?: ReactNode;\n};\n\nexport interface JaNeiSpørsmålProps extends Omit<RadioGroupProps, 'children'> {\n    onChange: (value: ESvar) => void;\n    labelTekstForRadios: LabelTekstForJaNei;\n    initiellVerdi: ESvar | null;\n}\n\nconst StyledRadioPanelGruppe = styled(RadioGroup)`\n    && label:not(:last-child) {\n        margin-bottom: 1rem;\n    }\n`;\n\nconst Capitalized = styled.span`\n    ::first-letter {\n        text-transform: capitalize;\n    }\n`;\n\n// eslint-disable-next-line react/display-name\nexport const JaNeiSpørsmål = React.forwardRef(\n    (props: JaNeiSpørsmålProps, ref: Ref<HTMLFieldSetElement> | undefined) => {\n        const {\n            legend,\n            name,\n            onChange,\n            labelTekstForRadios,\n            error,\n            initiellVerdi,\n            size,\n            required,\n            description,\n        } = props;\n\n        const [checked, setChecked] = useState<ESvar | ''>(initiellVerdi ?? '');\n\n        let radios = [\n            { label: <Capitalized>{labelTekstForRadios.ja}</Capitalized>, value: ESvar.JA },\n            {\n                label: <Capitalized>{labelTekstForRadios.nei}</Capitalized>,\n                value: ESvar.NEI,\n            },\n        ];\n\n        const inkluderVetIkke = !!labelTekstForRadios.vetikke;\n\n        if (inkluderVetIkke) {\n            radios = [\n                ...radios,\n                {\n                    label: <Capitalized>{labelTekstForRadios.vetikke}</Capitalized>,\n                    value: ESvar.VET_IKKE,\n                },\n            ];\n        }\n\n        return (\n            <StyledRadioPanelGruppe\n                legend={legend}\n                name={name}\n                value={checked ?? undefined}\n                onChange={value => {\n                    setChecked(value);\n                    onChange(value);\n                }}\n                error={error}\n                ref={ref}\n                size={size}\n                required={required}\n                description={description}\n            >\n                {radios.map(radio => (\n                    <Radio key={radio.value} value={radio.value}>\n                        {radio.label}\n                    </Radio>\n                ))}\n            </StyledRadioPanelGruppe>\n        );\n    },\n);\n","import React from 'react';\nimport { JaNeiSpørsmål } from './JaNeiSpørsmål';\nimport { ESvar } from './typer';\nimport styled from 'styled-components';\n// Det må faktisk være plugin fra workspace her så vidt jeg forstår\n// tslint:disable-next-line:no-implicit-dependencies\n\nexport default {\n    component: JaNeiSpørsmål,\n    parameters: {\n        docs: {\n            subtitle: 'En toggle for å svare på ja- og neispørsmål',\n        },\n    },\n    title: 'Komponenter/Form-elementer/JaNeiSpørsmål',\n};\n\nconst DivMedBredde = styled.div<{ bredde: string }>`\n    width: ${props => props.bredde};\n    margin-bottom: 3rem;\n`;\n\ninterface Props {\n    bredde: number;\n}\nexport const FamilieJaNeiSpørsmålStory: React.FC<Props> = ({ bredde, ...args }) => {\n    return (\n        <>\n            <DivMedBredde bredde={bredde.toString(10) + '%'} {...args}>\n                <JaNeiSpørsmål\n                    labelTekstForRadios={{ ja: 'Ja', nei: 'Nei' }}\n                    legend={'Har du det bra?'}\n                    name={'person.hardudetbra'}\n                    onChange={value => {\n                        alert(value === ESvar.NEI ? 'So sad' : 'Yayy, hurra!');\n                    }}\n                    initiellVerdi={null}\n                />\n            </DivMedBredde>\n            <DivMedBredde bredde={bredde.toString(10) + '%'}>\n                <JaNeiSpørsmål\n                    onChange={() => {\n                        alert('feil');\n                    }}\n                    legend={'Denne har feilmelding'}\n                    name={'felt.medfeil'}\n                    labelTekstForRadios={{ ja: 'Yes sir', nei: 'Nåneidu' }}\n                    error={'Dette var ikke bra'}\n                    initiellVerdi={null}\n                />\n            </DivMedBredde>\n            <DivMedBredde bredde={bredde.toString(10) + '%'}>\n                <JaNeiSpørsmål\n                    labelTekstForRadios={{ ja: 'Ja', nei: 'Nei', vetikke: 'Vet ikke' }}\n                    legend={'Har du det bra? Her kan du også svare vet ikke'}\n                    name={'person.hardudetbra'}\n                    onChange={value => {\n                        alert(value !== ESvar.NEI ? 'Yayy, hurra!' : 'So sad');\n                    }}\n                    initiellVerdi={null}\n                />\n            </DivMedBredde>\n        </>\n    );\n};\n\n// @ts-expect-error Storybookspesifikk kode\nFamilieJaNeiSpørsmålStory.args = {\n    bredde: 100,\n};\n\n// @ts-expect-error Storybookspesifikk kode\nFamilieJaNeiSpørsmålStory.argTypes = {\n    bredde: {\n        control: {\n            type: 'range',\n            min: 10,\n            max: 100,\n            step: 1,\n        },\n    },\n};\n"],"names":[],"sourceRoot":""}