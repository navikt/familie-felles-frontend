(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{wQgC:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return s})),t.d(n,"default",(function(){return p}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk");var r=t("/FXl"),a=t("TjRS");t("aD51");function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var s={};void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"packages/familie-backend/docz.mdx"}});var i={_frontmatter:s},c=a.a;function p(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(r.b)(c,o({},i,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Node.js backend med express for familie frontend apper.\nSetter opp en express app med azure autentisering og logging.\nKan konfigureres til å bruke redis gjennom egen konfigurasjon."),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-js"}),"const passportConfig: IOIDCStrategyOptionWithRequest = se interface i oidc-strategy.d.ts\nconst sessionConfig: ISessionKonfigurasjon = {\n    cookieSecret: string | string[],\n    navn: string,\n    redisPassord?: string;\n    redisUrl?: string; // Settes denne prøver modulen å koble seg til redis\n    secret?: boolean; // Settes til true dersom man aktiverer secret flagget på sesjonen\n    sessionMaxAgeSekunder?: number;\n    sessionSecret: string | string[],\n};\n\nexport const saksbehandlerTokenConfig: ITokenRequest = {\n    clientId: '<applikasjon_id fra aad app>',\n    clientSecret: '<SECRET fra aad app>',\n    redirectUrl: redirectUrl,\n    scope: `${'<applikasjon_id fra aad app>'}/.default`,\n    tokenUri: tokenURI,\n};\n\nexport const oboTokenConfig: ITokenRequest = {\n    clientId: '<applikasjon_id fra aad app>',\n    clientSecret: '<SECRET fra aad app>',\n    redirectUrl: redirectUrl,\n    scope: 'scope mot backend tjenesten',\n    tokenUri: tokenURI,\n};\n\nconst backend = new Backend(passportConfig, sessionConfig, saksbehandlerTokenConfig);\n\n// Brukes videre f.eks. slik til å sette opp proxy mot backend\nbackend\n    .getApp()\n    .use(\n        'proxyUrl',\n        backend.ensureAuthenticated(true, saksbehandlerTokenConfig),\n        attachToken(backend),\n        doProxy()\n    );\n")))}p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"packages/familie-backend/docz.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---packages-familie-backend-docz-mdx-b74815ab1e51add289f8.js.map