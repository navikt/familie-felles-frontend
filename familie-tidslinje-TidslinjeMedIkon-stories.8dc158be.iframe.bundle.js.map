{"version":3,"file":"familie-tidslinje-TidslinjeMedIkon-stories.8dc158be.iframe.bundle.js","mappings":";;;;AAcA;;AAIA;;AAIA","sources":["webpack://familie-felles-frontend/./packages/familie-tidslinje/TidslinjeMedIkon.stories.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Periode, Tidslinje, TidslinjeProps } from './src';\nimport styled from 'styled-components';\n\nimport '@navikt/ds-css';\nimport { StarsEuIcon, FlagCrossIcon } from '@navikt/aksel-icons';\nimport { Detail, Switch } from '@navikt/ds-react';\n\nconst TidlinjeContainer = styled.div`\n    & div.tidslinje .eøs {\n        background-color: yellow;\n    }\n`;\n\nconst StyledEu = styled(StarsEuIcon)`\n    margin-right: 0.3rem;\n`;\n\nconst StyledNorwegian = styled(FlagCrossIcon)`\n    margin-right: 0.3rem;\n`;\n\nexport default {\n    title: 'Komponenter/Tidslinje',\n    component: Tidslinje,\n    args: {\n        rader: [\n            [\n                {\n                    id: '123',\n                    fom: new Date('2020-01-01'),\n                    tom: new Date('2020-01-31'),\n                    status: 'suksess',\n                    infoPin: false,\n                    className: 'eøs',\n                    children: (\n                        <>\n                            <StyledEu\n                                height=\"24\"\n                                width=\"24\"\n                                style={{ position: 'relative', top: '-1px' }}\n                            />\n                            <span style={{ position: 'relative', top: '-6px' }}>\n                                Dette er ein lang tekst for testing\n                            </span>\n                        </>\n                    ),\n                    hoverLabel: 'Dette er ein lang tekst for testing',\n                },\n                {\n                    id: '234',\n                    fom: new Date('2020-02-01'),\n                    tom: new Date('2020-02-29'),\n                    status: 'feil',\n                    className: 'eøs',\n                    children: <StyledEu />,\n                },\n                {\n                    id: '345',\n                    fom: new Date('2020-03-01'),\n                    tom: new Date('2020-03-31'),\n                    status: 'suksess',\n                    className: 'norge',\n                    children: (\n                        <>\n                            <StyledNorwegian\n                                height=\"24\"\n                                width=\"24\"\n                                style={{\n                                    color: 'var(--a-orange-600)',\n                                    position: 'relative',\n                                    top: '-1px',\n                                }}\n                            />\n                            <Detail\n                                size=\"small\"\n                                style={{ display: 'inline', position: 'relative', top: '-8px' }}\n                            >\n                                Dette er ein lang tekst for testing\n                            </Detail>\n                        </>\n                    ),\n                },\n                {\n                    id: '456',\n                    fom: new Date('2020-07-01'),\n                    tom: new Date('2020-07-31'),\n                    status: 'suksess',\n                    className: 'norge',\n                    children: <StyledNorwegian height=\"24\" width=\"24\" />,\n                },\n                {\n                    id: '567',\n                    fom: new Date('2020-08-01'),\n                    tom: new Date('2020-08-31'),\n                    status: 'advarsel',\n                },\n            ],\n        ],\n        pins: [{ date: new Date('2020-03-15'), render: 'Dette er en pin' }],\n    },\n};\n\nexport const ClickableWithIcon = (args: TidslinjeProps) => {\n    const [rader, setRader] = useState<Periode[][]>(args.rader);\n    const [aktivPeriode, setAktivPeriode] = useState<Periode>();\n    const [kompakt, settKompakt] = useState<boolean>(false);\n\n    const onSelectPeriode = (periode: Periode) => {\n        setAktivPeriode(periode);\n        setRader(rader => rader.map(rad => rad.map(p => ({ ...p, active: periode.id === p.id }))));\n    };\n\n    const aktivRad =\n        aktivPeriode &&\n        rader.reduce(\n            (radIndex: number, rad: Periode[], i: number) =>\n                rad.find(({ id }) => id === aktivPeriode.id) ? i : radIndex,\n            undefined,\n        );\n    return (\n        <>\n            <div>\n                <Switch checked={kompakt} onClick={() => settKompakt(!kompakt)}>\n                    Kompakt\n                </Switch>\n            </div>\n            <TidlinjeContainer>\n                <h2>Klikkbare perioder</h2>\n                <p>\n                    Eksempel på muligheten for litt mer avansert innhold med blanding av ikon og\n                    tekst. Også eksempel på egne klasser på perioder.\n                </p>\n                <p>Styling må tilpasses bruken.</p>\n                <Tidslinje\n                    kompakt={kompakt}\n                    {...args}\n                    aktivRad={aktivRad}\n                    onSelectPeriode={onSelectPeriode}\n                />\n            </TidlinjeContainer>\n            {aktivPeriode && <div>{`${aktivPeriode.fom} - ${aktivPeriode.tom}`}</div>}\n        </>\n    );\n};\nClickableWithIcon.storyName = 'Klikkbar tidslinje med ikon';\n\nexport const NotClickableWithIcon = (args: TidslinjeProps) => {\n    const [kompakt, settKompakt] = useState<boolean>(false);\n    return (\n        <>\n            <div>\n                <Switch checked={kompakt} onClick={() => settKompakt(!kompakt)}>\n                    Kompakt\n                </Switch>\n            </div>\n            <h2>Perioder ikke klikkbare</h2>\n            <p>\n                Eksempel på muligheten for litt mer avansert innhold med blanding av ikon og tekst.\n                Også eksempel på egne klasser på perioder.\n            </p>\n            <p>Styling må tilpasses bruken.</p>\n            <TidlinjeContainer>\n                <Tidslinje kompakt={kompakt} {...args} />\n            </TidlinjeContainer>\n        </>\n    );\n};\nNotClickableWithIcon.storyName = 'Uklikkbar tidslinje med ikon';\n"],"names":[],"sourceRoot":""}